'use strict';

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var WidgetRss = (function () {
	function WidgetRss(box, url) {
		_classCallCheck(this, WidgetRss);

		this.box = box;
		var head = document.getElementsByTagName('head')[0];
		var script = document.createElement('script');
		script.type = 'text/javascript';
		script.onload = function () {};
		script.src = url;
		head.appendChild(script);
	}

	//var wr = new WidgetRss(document.body, 'http://www.jornalismoemfluxo.com/tudo?format=json&callback=wr.parse')

	_createClass(WidgetRss, [{
		key: 'parse',
		value: function parse(data) {
			this.data = data;
			this.display(this.box);
		}
	}, {
		key: 'display',
		value: function display(box) {
			var html = [];
			var _iteratorNormalCompletion = true;
			var _didIteratorError = false;
			var _iteratorError = undefined;

			try {
				for (var _iterator = this.data.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
					var article = _step.value;
					var assetUrl = article.assetUrl;
					var categories = article.categories;
					var fullUrl = article.fullUrl;
					var id = article.id;
					var excerpt = article.excerpt;
					var title = article.title;
					var tags = article.tags;

					var link = 'http://jornalismoemfluxo.net' + fullUrl;
					html.push('\n<div class="summary-item summary-item-record-type-text sqs-gallery-design-autogrid-slide summary-item-has-thumbnail summary-item-has-excerpt summary-item-has-author">\n<!-- Thumbnail -->\n<a href="' + link + '" class="summary-thumbnail-container sqs-gallery-image-container" data-title="' + title + '">\n\t<div class="summary-thumbnail img-wrapper">\n\t<!-- Main Image -->\n\t\t<img class="summary-thumbnail-image" alt="' + title + '" src="' + assetUrl + '" height=200 style="max-width:100%">\n\t</div>\n</a>\n<div class="summary-title">\n\t<a href="' + link + '" class="summary-title-link">' + title + '</a>\n</div>\n<div class="summary-excerpt">\n\t' + excerpt + '\n</div>\n</div>');
					// <div class="summary-metadata-container summary-metadata-container--below-content">
					// 	<div class="summary-metadata summary-metadata--primary">
					// 		<!-- Timestamp -->
					// 		<time class="summary-metadata-item summary-metadata-item--date" datetime="2014-06-06">Jun  6, 2014</time>
					// 		<!-- Author -->
					// 		<span class="summary-metadata-item summary-metadata-item--author"><a href="/tudo/?author=538f9ef7e4b0c930e8bef710#show-archive">Bruno Torturra</a></span>
					// 	</div>
					// </div>
				}
			} catch (err) {
				_didIteratorError = true;
				_iteratorError = err;
			} finally {
				try {
					if (!_iteratorNormalCompletion && _iterator['return']) {
						_iterator['return']();
					}
				} finally {
					if (_didIteratorError) {
						throw _iteratorError;
					}
				}
			}

			box.insertAdjacentHTML("beforeend", html.join("\n"));
		}
	}]);

	return WidgetRss;
})();
